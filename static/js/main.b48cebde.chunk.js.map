{"version":3,"sources":["assets/resume.pdf","config/data.js","pages/Main/index.js","pages/Main/Main.js","hooks/useType.js","components/Loading/Loading.js","components/Loading/index.js","index.js"],"names":["module","exports","data","linkedin","xing","github","Main","text","strings","useState","phrase","setPhrase","counter","setCounter","incrementCounter","useCallback","delayUpdateCount","word","humanize","Math","round","random","delay","substring","setInterval","cleanInterval","id","clearInterval","useEffect","join","useType","className","href","target","rel","size","color","file","download","React","Loading","memo","show","console","log","App","load","setLoad","a","setTimeout","cleanUpIntervalAndLoad","ReactDOM","render","document","getElementById"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,oC,iNCApC,IAAMC,EACH,CACNC,SAAU,6CACVC,KAAM,+CACNC,OAAQ,mC,gBCFGC,G,MCOF,WAAO,IAAD,EAEgBJ,EAA1BC,EAFU,EAEVA,SAAUC,EAFA,EAEAA,KAAMC,EAFN,EAEMA,OAGnBE,ECVS,WAAgC,IAAfC,EAAc,uDAAJ,GAAI,EAChBC,mBAAS,IADO,mBACrCC,EADqC,KAC7BC,EAD6B,OAEdF,mBAAS,GAFK,mBAErCG,EAFqC,KAE5BC,EAF4B,KAItCC,EAAmBC,uBAAY,WACnCF,EAAWD,EAAU,KACpB,CAACA,IAEEI,EAAmBD,uBAAa,SAAAE,GAEpC,IAAIC,EAAWC,KAAKC,MAAM,GAAAD,KAAKE,SAAwB,MACnDC,EAA0B,OAAlBL,EAAKL,GAbO,IAamCM,EAI3D,GAFAP,EAAUM,EAAKM,UAAU,EAAGX,IAExBK,IAASP,EACX,OAAOc,YAAYV,EAAkBQ,KAEvC,CAACV,EAASE,EAAkBJ,IAExBe,EAAgB,SAACC,GACrBC,cAAcD,IAQhB,OALAE,qBAAW,WACT,IAAIF,EAAKV,EAAiBR,EAAQqB,KAAK,OACvC,OAAO,kBAAMJ,EAAcC,MAC1B,CAACd,EAASI,EAAkBR,IAExBE,EDnBIoB,CAFK,CAAC,MAAO,eAAgB,uBAIxC,OACE,oCACE,6BAASJ,GAAG,OAAOK,UAAU,QAC3B,yBAAKA,UAAU,gBACb,4BAAKxB,EAAK,0BAAMwB,UAAU,UAAhB,MACV,wBAAIA,UAAU,UACZ,4BACE,uBAAGC,KAAM3B,EAAQ4B,OAAO,SAASC,IAAI,uBAArC,IAA4D,kBAAC,IAAD,CAAUC,KAAM,GAAIC,MAAM,UAAtF,MAEF,4BACE,uBAAGJ,KAAM7B,EAAU8B,OAAO,SAASC,IAAI,uBAAvC,IAA8D,kBAAC,IAAD,CAAcC,KAAM,GAAIC,MAAM,UAA5F,MAEF,4BACE,uBAAGJ,KAAM5B,EAAM6B,OAAO,SAASC,IAAI,uBAAnC,IAA0D,kBAAC,IAAD,CAAQC,KAAM,GAAIC,MAAM,UAAlF,MAEF,4BACE,uBAAGJ,KAAMK,IAAMC,UAAQ,GAAvB,IAAyB,kBAAC,IAAD,CAAgBH,KAAM,GAAIC,MAAM,UAAzD,Y,MEZCG,IClBAC,EDkBAD,IAAME,MAjBrB,YAAmC,IAAD,IAAfC,YAAe,SAchC,OAbAC,QAAQC,IAAIF,GAaLA,EAXL,yBAAKhB,GAAG,aACN,yBAAKK,UAAU,WACb,yBAAKA,UAAU,kBACb,8BACA,iCAO4B,wCEVhCc,EAAM,WAAO,IAAD,EACQpC,oBAAS,GADjB,mBACTqC,EADS,KACHC,EADG,iDAQhB,sBAAAC,EAAA,+EACSC,YAAW,kBAAMF,GAAQ,KAAO,MADzC,4CARgB,sBAiBhB,OALAnB,qBAAU,WAER,OAX6B,SAACF,GAC9BqB,GAAQ,GACRpB,cAAcD,GASPwB,CAdO,0CAaL5B,MAER,IAEKwB,EAEF,kBAAC,EAAD,MADD,kBAAC,EAAD,CAASJ,MAAOI,KAIvBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b48cebde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.8b04890c.pdf\";","export const data = {\n  social: {\n    linkedin: \"https://www.linkedin.com/in/augusto-giles/\",\n    xing: \"https://www.xing.com/profile/Augusto_Juvenal\",\n    github: \"https://github.com/augustogiles\"\n  }\n}","import Main from './Main'\n\nexport default Main;","import React from 'react';\nimport {FaXing, FaLinkedinIn, FaGithub, FaFileDownload} from 'react-icons/fa';\n\nimport useType from '../../hooks/useType';\n\nimport {data} from '../../config/data';\nimport file from '../../assets/resume.pdf'\nimport './index.css';\n\nconst Main = () => {\n\n  const {linkedin, xing, github} = data.social\n  const strings = [\"Hi!\", \"I'm Augusto,\", \"Software Developer\"];\n\n  let text = useType(strings);\n\n  return (\n    <>\n      <section id=\"home\" className=\"home\">\n        <div className=\"home-content\">\n          <h1>{text}<span className=\"cursor\">|</span></h1>\n          <ul className=\"social\">\n            <li>\n              <a href={github} target=\"_blank\" rel=\"noopener noreferrer\"> <FaGithub size={16} color='white' /> </a>\n            </li>\n            <li>\n              <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\"> <FaLinkedinIn size={16} color='white' /> </a>\n            </li>\n            <li>\n              <a href={xing} target=\"_blank\" rel=\"noopener noreferrer\"> <FaXing size={16} color='white' /> </a>\n            </li>\n            <li>\n              <a href={file} download> <FaFileDownload size={16} color='white' /> </a>\n            </li>\n          </ul>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Main;","import { useEffect, useState, useCallback } from 'react';\n\nconst DELAY_PAUSE_DEFAULT = 600;\n\nexport default function useAuth(strings = []) {\n  const [phrase, setPhrase] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n\n  const incrementCounter = useCallback(() => {\n    setCounter(counter + 1)\n  }, [counter])\n\n  const delayUpdateCount = useCallback( word => {\n    \n    let humanize = Math.round(Math.random() * (100 - 30) + 53.5);\n    let delay = word[counter] === '\\n' ? DELAY_PAUSE_DEFAULT : humanize;\n    \n    setPhrase(word.substring(0, counter));\n    \n    if (word !== phrase)\n      return setInterval(incrementCounter, delay);\n  \n  },[counter, incrementCounter, phrase])\n  \n  const cleanInterval = (id) => {\n    clearInterval(id);\n  }\n  \n  useEffect( () => {\n    let id = delayUpdateCount(strings.join('\\n'));\n    return () => cleanInterval(id);\n  }, [counter, delayUpdateCount, strings]);\n\n  return phrase;\n};","import React from 'react';\nimport './index.css';\n\nfunction Loading( {show = true} ) {\n  console.log(show);\n  const LoadingAnimation = (\n    <div id=\"preloader\">\n      <div className=\"spinner\">\n        <div className=\"uil-ripple-css\">\n          <div />\n          <div />\n        </div>\n      </div>\n    </div>\n  )\n\n  \n  return show ? (LoadingAnimation) : (<></>);\n}\n\nexport default React.memo(Loading);","import Loading from './Loading';\n\nexport default Loading;","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport Main from './pages/Main'\nimport Loading from './components/Loading';\n\nconst App = () => {\n  const [load, setLoad] = useState(false);\n\n  const cleanUpIntervalAndLoad = (id) => {\n    setLoad(false)\n    clearInterval(id);\n  }\n\n  async function delay() {\n    return setTimeout(() => setLoad(true), 400);\n  }\n\n  useEffect(() => {\n    let id = delay();\n    return cleanUpIntervalAndLoad(id);\n  }, []);\n\n  return !load ?  \n      (<Loading show={!load} />)\n      : <Main/>\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}